<?xml version="1.0" encoding="UTF-8"?>
<manifest>
	<remote  name="yocto" fetch="git://git.yoctoproject.org/" pushurl="git://git.yoctoproject.org/" />
    <!--最初にmanifestアイテムの中にremoteを登録していきます。この中には以下の情報を記載してあります-->
    <!--name : このファイル内での呼び名。以降remote=nameで参照される-->
    <!--fetch: クローン元のURL。githubのアドレスを記入してある-->
	<remote  name="openembedded" fetch="git://git.openembedded.org/" pushurl="git://git.openembedded.org/" />
	<remote  name="linaro" fetch="git://git.linaro.org/openembedded" pushurl="git://git.linaro.org/openembedded" />
	<remote  name="renesas-rcar" fetch="https://github.com/renesas-rcar" pushurl="https://github.com/renesas-rcar" />


    <!--remoteを設定し終えたらprojectを設定します-->
    <!--まず最初にprojectのrevision等が設定されていない場合のdefault値を設定しておきます
        これによってrevisionに設定が無い場合はmasterブランチから取得することが設定できます-->
    <default revision="main" />
    <!--projectには以下の記述を行ないます
        path : cloneしてきた際の名前を指定します
        name : このファイル内での呼び名を定義しています。以降はproject=hogeで呼び出すことができます
        remote : 上で設定したremoteプロパティを呼び出します。これによってclone元を指定しています
        revision : cloneするブランチのことです-->
	
    <!-- Yocto Layers -->
	<project path="poky" name="poky" remote="yocto" revision="thud" />
	<!-- Openembedded Layers -->
	<project path="meta-openembedded" name="meta-openembedded" remote="openembedded" revision="4cd3a39f22a2712bfa8fc657d09fe2c7765a4005" />
	<project path="meta-linaro" name="meta-linaro" remote="linaro" revision="0a94decea3bd2504590d1637eadff9d502c19ee2" />
	<project path="meta-virtualization" name="meta-virtualization" remote="yocto" revision="thud" />
	<!-- function Layers -->
	<!--
    <project path="meta-container-host" name="meta-container-host" remote="agl-ic-eg" revision="master" />
	-->
    <!-- distro Layers -->
	<!-- bsp Layers-->
	<project path="meta-renesas" name="meta-renesas" remote="renesas-rcar" revision="refs/tags/thud-Yocto-v3.21.0" />
</manifest>
<!-- 2020_10_07 Zombie-Sense-->
<!--このxmlファイルはic-egのモノを真似して作成したものです-->
<!--コメントアウトの記法が面倒でカルチャーショックを受けています-->